From 0b92516dd24764c3c54b30acb3a96aca94803a8b Mon Sep 17 00:00:00 2001
From: Szymon Sliwa <szs@semihalf.com>
Date: Thu, 22 Feb 2018 14:32:45 +0100
Subject: [PATCH 4/4] [HACK] enable inline in socket pktio

Added simple lines which enable IPsec inline mode
on RX using socket pktio. The changes are not intended to be
pushed to main odp repository - these are only minimal changes
to make use of the functionality.

Signed-off-by: Szymon Sliwa <szs@semihalf.com>
---
 platform/linux-generic/pktio/socket_mmap.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/platform/linux-generic/pktio/socket_mmap.c b/platform/linux-generic/pktio/socket_mmap.c
index c63a253..f7cc8e1 100644
--- a/platform/linux-generic/pktio/socket_mmap.c
+++ b/platform/linux-generic/pktio/socket_mmap.c
@@ -32,6 +32,7 @@
 #include <odp_classification_datamodel.h>
 #include <odp_classification_inlines.h>
 #include <odp_classification_internal.h>
+#include <odp_ipsec_internal.h>
 #include <odp/api/hints.h>
 
 #include <protocols/eth.h>
@@ -244,6 +245,18 @@ static inline unsigned pkt_mmap_v2_rx(pktio_entry_t *pktio_entry,
 		nb_rx++;
 	}
 
+	/* Try IPsec inline processing */
+	for (i = 0; i < nb_rx; i++) {
+		odp_packet_t pkt = pkt_table[i];
+		odp_packet_hdr_t *pkt_hdr = odp_packet_hdr(pkt);
+
+		packet_parse_layer(pkt_hdr, ODP_PROTO_LAYER_L4);
+
+		if(odp_packet_has_ipsec(pkt_table[i]))
+			_odp_ipsec_try_inline(pkt_table[i]);
+
+	}
+
 	ring->frame_num = frame_num;
 	return nb_rx;
 }
@@ -671,6 +684,8 @@ static int sock_mmap_capability(pktio_entry_t *pktio_entry ODP_UNUSED,
 	odp_pktio_config_init(&capa->config);
 	capa->config.pktin.bit.ts_all = 1;
 	capa->config.pktin.bit.ts_ptp = 1;
+	capa->config.inbound_ipsec = 1;
+	capa->config.outbound_ipsec = 1;
 	return 0;
 }
 
-- 
2.7.4

